name: test index.js

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Set status to success
      if: success()
      run: |
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
        -d '{"state": "success", "context": "test index.js", "description": "Tests passed"}'

    - name: Set status to failure
      if: failure()
      run: |
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
        -d '{"state": "failure", "context": "test index.js", "description": "Tests failed"}'

  coverage:

    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run coverage
      run: npm run coverage

    - name: Pipe coverage output to PR if this is a PR
      run: |
        COVERAGE_OUTPUT=$(npm run coverage)
        ESCAPED_OUTPUT=$(echo "$COVERAGE_OUTPUT" | jq -Rsa .)
        echo $ESCAPED_OUTPUT
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/comments \
        -d '{"body": "Coverage Report:\n $ESCAPED_OUTPUT"}'